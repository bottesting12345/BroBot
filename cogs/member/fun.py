# python3.6
# -*- coding: utf-8 -*-

from discord.ext import commands
from random import randint, choice
import requests
import discord
import apiai
import json
import os

import pokebase as pb
import asyncio

from utils.MemeGenerator import make_meme
from utils.NekosWrapper import (get_neko,
                                NekoNotInTags,
                                nekos_tags)

class Fun(object):
    """User Commands - Fun"""
    def __init__(self, bot):
        self.bot = bot
    
    @commands.group(name='emote', aliases=['emotes'])
    async def emotes(self, ctx):
        """Emotions and anime pictures <3"""
        if not ctx.invoked_subcommand:
            await ctx.send(f'{ctx.prefix}{ctx.command} -\nlove\nsad\njoy\nangry\nlonely')

    @emotes.command(name='love')
    async def love(self, ctx):
        """Love"""
        image = 'http://images.vfl.ru/ii/1540905231/0cf06cf3/24000410.jpg'
        author = ctx.message.author.name
        messages = [f'{author} full of love and care <3']

        embed = discord.Embed(color=0xFF6AE5,
                              title=choice(messages))
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        embed.set_image(url=image)
        await ctx.send(embed=embed)

    @emotes.command(name='sad')
    async def sad(self, ctx):
        """sadness"""
        image = 'http://images.vfl.ru/ii/1540905169/1859d59c/24000401.jpg'
        author = ctx.message.author.name
        messages = [f'{author} feels sad :c',
                    f'So late, when {author} sad...']

        embed = discord.Embed(color=0xFF6AE5,
                              title=choice(messages))
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        embed.set_image(url=image)
        await ctx.send(embed=embed)

    @emotes.command(name='joy')
    async def joy(self, ctx):
        """Joy"""
        image = 'http://images.vfl.ru/ii/1540905081/27bd14ca/24000379.jpg'
        author = ctx.message.author.name
        messages = [f'I'm glad, {author} happy!',
                    f'–°—á–∞—Å—Ç—å—è –ø–æ–ª–æ–Ω {author}, —ç—Ç–æ —Ç–∞–∫ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! :–∑',
                    f'{author} —Å—á–∞—Å—Ç–ª–∏–≤! –ú–µ–Ω—è —ç—Ç–æ —Ä–∞–¥—É–µ—Ç <3']

        embed = discord.Embed(color=0xFF6AE5,
                              title=choice(messages))
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        embed.set_image(url=image)
        await ctx.send(embed=embed)

    @emotes.command(name='angry')
    async def angry(self, ctx):
        """–ó–ª–æ—Å—Ç—å"""
        image = 'http://images.vfl.ru/ii/1540904890/5fce2341/24000340.jpg'
        author = ctx.message.author.name
        messages = [f'{author} –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –∑–ª–æ—Å—Ç—å... –ù–µ —Å—Ç–æ–∏—Ç –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –µ–≥–æ!',
                    f'–ú–Ω–µ —Ç–∞–∫ –≥—Ä—É—Å—Ç–Ω–æ –≤–∏–¥–µ—Ç—å, —á—Ç–æ {author} –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –∑–ª–æ—Å—Ç—å...',
                    f'{author} –∑–æ–ª... –≠—Ç–æ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç –º–µ–Ω—è –≥—Ä—É—Å—Ç—å—é :c']

        embed = discord.Embed(color=0xFF6AE5,
                              title=choice(messages))
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        embed.set_image(url=image)
        await ctx.send(embed=embed)

    @emotes.command(name='lonely')
    async def lonely(self, ctx):
        """–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ"""
        image = 'http://images.vfl.ru/ii/1540905345/1bab6eb8/24000432.jpg'
        author = ctx.message.author.name
        messages = [f'–ú–Ω–µ –∂–∞–ª—å {author}. –û–Ω —á—É–≤—Å—Ç–≤—É–µ—Ç –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ :c',
                    f'–ê—Ö, –∫–∞–∫ –∂–∞–ª—å... –ß—É–≤—Å—Ç–≤–æ –æ–¥–∏–Ω–æ–∫–æ—Å—Ç–∏ –Ω–∞–ø–æ–ª–Ω–∏–ª–æ {author}...',
                    f'{author} —á—É–≤—Å—Ç–≤—É–µ—Ç –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ...']

        embed = discord.Embed(color=0xFF6AE5,
                              title=choice(messages))
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        embed.set_image(url=image)
        await ctx.send(embed=embed)

    @commands.command(name='memegen')
    @commands.cooldown(1, 8, commands.BucketType.guild)
    async def memegen(self, ctx, *, text: commands.clean_content = '–í–æ—Ç —Ç–∞–∫–∏–µ –ø–∏—Ä–æ–≥–∏'):
        """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–µ–º–æ–≤. *–°–æ–æ—Ä—É–¥–∏ —Å–≤–æ–π —Ç–æ–ø–æ–≤—ã–π –º–µ–º!*

        [!] –ö–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ª–∏—à—å —Ä–∞–∑ –≤ 8 —Å–µ–∫—É–Ω–¥.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:text` - —Ç–µ–∫—Å—Ç (% - –ø–µ—Ä–µ–Ω–æ—Å –≤–Ω–∏–∑)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!memegen –í–æ—Ç —Ç–∞–∫–∏–µ –ø–∏—Ä–æ–≥–∏
        ```
        """
        string_list = text.split('%')

        templates = [f'templates/{x}' for x in os.listdir('templates/')]

        if len(string_list) == 1:
            make_meme(topString=string_list[0],
                    bottomString='',
                    outputFilename=ctx.guild.id,
                    filename=choice(templates))
        elif len(string_list) >= 2:
            make_meme(topString=string_list[0],
                    bottomString=string_list[1],
                    outputFilename=ctx.guild.id,
                    filename=choice(templates))
        await ctx.send(file=discord.File(fp=f'{ctx.guild.id}.png'))
        await asyncio.sleep(5)
        os.remove(f'{ctx.guild.id}.png')

    @commands.command(name='vote4v')
    async def vote4v(self, ctx, *, msg: commands.clean_content):
        """–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ A-B-C-D.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à –≤–æ–ø—Ä–æ—Å
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!vote2n –ß–µ—Ä–Ω—ã–π —á–∞–π –∏–ª–∏ –∑–µ–ª–µ–Ω—ã–π? :thinking:
        ```
        """
        
        reactions = ['üá¶', 'üáß', 'üá®', 'üá©']

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ!',
                              description=msg)
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        m = await ctx.send('–ì–æ–ª–æ—Å—É–µ–º!', embed=embed)

        self.VOTE_A = 0
        self.VOTE_B = 0
        self.VOTE_C = 0
        self.VOTE_D = 0
        self.checked = []

        async def checking():
            for x in reactions:
                await m.add_reaction(x)

            def check(r, u):
                if not m \
                    or r.message.id != m.id \
                    or u.id in self.checked \
                    or u.bot:
                    return False
                return True

            while True:
                r, u = await self.bot.wait_for('reaction_add', check=check)
                if str(r) == 'üá¶':
                    self.VOTE_A += 1
                if str(r) == 'üáß':
                    self.VOTE_B += 1
                if str(r) == 'üá®':
                    self.VOTE_C += 1
                if str(r) == 'üá©':
                    self.VOTE_D += 1

                self.checked.append(u.id)
        checkloop = self.bot.loop.create_task(checking())
        await asyncio.sleep(30)
        checkloop.cancel()

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ!',
                              description=f'```{msg}```')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')
        embed.add_field(name='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:', value=f'üá¶: {self.VOTE_A}\nüáß: {self.VOTE_B}\nüá®: {self.VOTE_C}\nüá©: {self.VOTE_D}')

        await ctx.send(embed=embed)

    @commands.command(name='vote2v')
    async def vote2n(self, ctx, *, msg: commands.clean_content):
        """–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ A-B.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à –≤–æ–ø—Ä–æ—Å
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!vote2n –ö–æ–º—É –¥–∞—Ç—å –∫–æ–Ω—Ñ–µ—Ç–∫—É —Å—Ç–∞–≤–∏–º "1"!
        n!vote2n –ß–µ—Ä–Ω—ã–π —á–∞–π –∏–ª–∏ –∑–µ–ª–µ–Ω—ã–π? :thinking:
        ```
        """

        reactions = ['1‚É£', '2‚É£']

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ!',
                              description=msg)
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        m = await ctx.send('–ì–æ–ª–æ—Å—É–µ–º!', embed=embed)

        self.voted_down = 0
        self.voted_up = 0
        self.checked = []

        async def checking():
            for x in reactions:
                await m.add_reaction(x)

            def check(r, u):
                if not m \
                    or r.message.id != m.id \
                    or u.id in self.checked \
                    or u.bot:
                    return False
                return True

            while True:
                r, u = await self.bot.wait_for('reaction_add', check=check)
                if str(r) == '1‚É£':
                    self.voted_up += 1
                if str(r) == '2‚É£':
                    self.voted_down += 1

                self.checked.append(u.id)
        checkloop = self.bot.loop.create_task(checking())
        await asyncio.sleep(30)
        checkloop.cancel()

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ!',
                              description=f'```{msg}```')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')
        embed.add_field(name='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:', value=f'1‚É£: {self.voted_up}\n2‚É£: {self.voted_down}')

        await ctx.send(embed=embed)

    @commands.command(name='pokemon')
    async def pokemon_game(self, ctx):
        """–ò–≥—Ä–∞ ‚Äú–£–≥–∞–¥–∞–π –ø–æ–∫–µ–º–æ–Ω–∞‚Äû.

        –°—É—Ç—å –∏–≥—Ä—ã –ø—Ä–æ—Å—Ç–∞ - –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –∏–º—è –ø–æ–∫–µ–º–æ–Ω–∞,
            –∏–∑–æ–±—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
        """

        def message_check(m):
            return m.author.id == ctx.author.id
        
        resp = requests.get('https://pokeapi.co/api/v2/pokemon/')
        pokemons = [x['name'] for x in resp.json()['results']]

        pokemon_name = choice(pokemons)
        pokemon = pb.pokemon(pokemon_name)

        embed = discord.Embed(color=0x42f453, title='–ò–≥—Ä–∞ ‚Äú–£–≥–∞–¥–∞–π –ø–æ–∫–µ–º–æ–Ω–∞‚Äû',
                    description='–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞.\n–ü–∏—à–∏—Ç–µ –∏–º—è –ª–∞—Ç–∏–Ω–∏—Ü–µ–π.')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')
        embed.set_image(url=f'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemon.id}.png')
        await ctx.send(embed=embed)

        try:
            msg = await self.bot.wait_for('message', check=message_check, timeout=30.0)
            if msg.content.lower() == pokemon_name:
                await ctx.send('–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ! :cake:')
            else:
                await ctx.send('–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –ù–∏—á–µ–≥–æ, –ø–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!')

        except asyncio.TimeoutError:
            await ctx.send(':x: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞. –ù–∏—á–µ–≥–æ, –ø–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!')

    @commands.command(name='prediction', aliases=['predict'])
    async def prediction(self, ctx, *, message: str):
        """–ú–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à –≤–æ–ø—Ä–æ—Å
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!predict –Ø –≤—ã–∏–≥—Ä–∞—é –º–∏–ª–ª–∏–æ–Ω?
        ```
        """
        possible = [
            '–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–µ—Ç.', '–≤—Ä—è–¥ –ª–∏...', '–æ—á–µ–Ω—å —Å–æ–º–Ω–µ–≤–∞—é—Å—å.', '–º–æ–∂–µ—Ç –±—ã—Ç—å.',
            '—ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!', '–º–æ–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç.', '–≤–æ–æ–±—â–µ –ø–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é.',
            '–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–æ —à–∞–Ω—Å—ã –æ—á–µ–Ω—å –º–∞–ª—ã.', '–¥—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.', '–Ω–µ –æ—Ç—Ä–∏—Ü–∞—é :thinking:',
            '–º–æ–π –æ—Ç–≤–µ—Ç: –î–∞.', '–ø–æ–ª–∞–≥–∞—é, —ç—Ç–æ —Ç–∞–∫.', '–Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ.', '—Ä–∞–∑—É–º–µ–µ—Ç—Å—è, –¥–∞.']

        if len(message) <= 1:
            i_choice_it = randint(0, 5)
            return await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

        elif len(message) >= 15:
            i_choice_it = randint(0, 8)
            await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

        elif len(message) >= 2 and len(message) <= 14:
            i_choice_it = randint(0, 13)
            await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

    @commands.command(name='random', aliases=['randuser', 'randomuser', 'rand-user'])
    async def randomuser(self, ctx, *, message: str):
        """–í—ã–±—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - —Å–æ–æ–±—â–µ–Ω–∏–µ.
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!randuser –ø—Ä–æ–∏–≥—Ä–∞–ª 5–∫ —Ä—É–±–ª–µ–π!
        n!random –Ω–µ –ø–æ–∫—É—à–∞–ª –∫–∞—à—É
        ```
        """
        embed = discord.Embed(timestamp=ctx.message.created_at,
            color=randint(0x000000, 0xFFFFFF),
            description=f'{choice([x.mention for x in ctx.guild.members])} {message}')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        await ctx.send(embed=embed)

    @commands.command(name='myname')
    @commands.guild_only()
    async def myname(self, ctx, *, nickname: str = None):
        """–°–º–µ–Ω–∏—Ç—å –≤–∞—à –Ω–∏–∫–Ω–µ–π–º

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:nickname` - –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–±—Ä–æ—Å–∞)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!myname –†–∞–º–æ—á–∫–∞
        n!myname
        ```
        """

        await ctx.author.edit(nick=nickname, reason='–ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.')
        await ctx.send('–£—Å–ø–µ—à–Ω–æ.', delete_after=5)

    @commands.command(name='talk', aliases=['t'])
    async def talk(self, ctx, *, message: commands.clean_content):
        """–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º (–∏—Å–ø–æ–ª—å–∑—É—è Google DialogFlow).

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!talk –ü—Ä–∏–≤–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—à—å?
        ```
        """
        ai = apiai.ApiAI(os.getenv('TALK_SERVICE_TOKEN'))
        request = ai.text_request()

        request.session_id = os.getenv('TALK_SERVICE_SESSION_ID')
        request.query = message
        responseJson = json.loads(request.getresponse().read().decode('utf-8'))
        response = responseJson['result']['fulfillment']['speech']

        if response:
            await ctx.send(response)

        else:
            no_answer = choice(['–ù–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å...',
                                '–ü–æ–ª–∞–≥–∞—é, —É –º–µ–Ω—è –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞.',
                                '~~–ö–∞–∫ –∂–µ –æ—Ç–≤–µ—Ç–∏—Ç—å, –∫–∞–∫ –∂–µ –æ—Ç–≤–µ—Ç–∏—Ç—å...~~',
                                '–ò–∑–≤–∏–Ω—è—é—Å—å, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å...'])
            await ctx.send(no_answer)

    @commands.command(name='helloworld', aliases=['hw'])
    async def helloworld(self, ctx):
        await ctx.send('Hello, %s' % ctx.author.mention)

    @commands.command(name='say', aliases=['repeat', 'msg'])
    async def say(self, ctx, *, message: commands.clean_content):
        """–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - —Å–æ–æ–±—â–µ–Ω–∏–µ.
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!say –Ø - –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç, –º–Ω–µ –Ω–µ—Ç —Ä–∞–≤–Ω—ã—Ö. –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ.
        ```
        """
        try:
            await ctx.message.delete()
        except:
            pass
        await ctx.send(message)

    @commands.command(name='neko', aliases=['catgirl', 'nekogirl'])
    @commands.is_nsfw()
    async def catgirl(self, ctx, tag: str = None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∏–º–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:tag` - —Ç–µ–≥ (–∏–ª–∏ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–µ–≥–æ–≤)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!neko help
        n!neko avatar
        ```
        """
        embed = discord.Embed(timestamp=ctx.message.created_at, color=0xF13875)

        if tag not in nekos_tags:
            embed.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏:',
                            value=', '.join(nekos_tags))
        else:
            embed.set_image(url=get_neko(tag))

        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        await ctx.send(embed=embed)

    @commands.command(name='avatar', aliases=['useravatar'])
    async def avatar(self, ctx, member: discord.Member = None):
        """–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:member` - —É—á–∞—Å—Ç–Ω–∏–∫
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!avatar Username
        n!avatar @Username#123
        ```
        """

        if not member:
            member = ctx.author

        embed = discord.Embed(timestamp=ctx.message.created_at, color=0xfA0000, title=f'–ê–≤–∞—Ç–∞—Ä–∫–∞ {member}')

        if not member.avatar_url:
            embed.set_image(url=member.default_avatar_url)
        else:
            embed.set_image(url=member.avatar_url_as(static_format='png', size=1024))

        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(Fun(bot))
